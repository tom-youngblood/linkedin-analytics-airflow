name: Security Scanning

on:
  schedule:
    # Run security scans weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'requirements.txt'
      - 'packages.txt'

jobs:
  dependency-scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Safety check
      run: |
        pip install safety
        safety check --json --output safety-report.json

    - name: Run Bandit security scan
      run: |
        pip install bandit
        bandit -r dags/ include/ -f json -o bandit-report.json

    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports-${{ github.run_number }}
        path: |
          safety-report.json
          bandit-report.json
        retention-days: 30

    - name: Comment on PR if vulnerabilities found
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          let safetyReport = [];
          let banditReport = [];
          
          try {
            safetyReport = JSON.parse(fs.readFileSync('safety-report.json', 'utf8'));
          } catch (e) {
            console.log('No safety report found');
          }
          
          try {
            banditReport = JSON.parse(fs.readFileSync('bandit-report.json', 'utf8'));
          } catch (e) {
            console.log('No bandit report found');
          }
          
          if (safetyReport.length > 0 || banditReport.results.length > 0) {
            let comment = '## Security Scan Results\n\n';
            
            if (safetyReport.length > 0) {
              comment += '### Dependency Vulnerabilities\n';
              safetyReport.forEach(vuln => {
                comment += `- **${vuln.package}**: ${vuln.vulnerability_id} - ${vuln.advisory}\n`;
              });
              comment += '\n';
            }
            
            if (banditReport.results.length > 0) {
              comment += '### Code Security Issues\n';
              banditReport.results.forEach(issue => {
                comment += `- **${issue.issue_severity}**: ${issue.issue_text} in ${issue.filename}:${issue.line_number}\n`;
              });
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          } 